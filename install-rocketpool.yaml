- name: Install and setup Rocket Pool, geth pruning and monitoring
  hosts: rocket_pool
  become: yes
  become_user: rp
  tasks:
    - name: Create ~/bin directory
      file:
        state: directory
        path: ~/bin
        mode: 0770
    - name: Download Rocket Pool CLI
      get_url:
        url: https://github.com/rocket-pool/smartnode-install/releases/{{ rocket_pool.version }}/download/rocketpool-cli-linux-amd64
        dest: ~/bin/rocketpool
        mode: 0770
    - name: Install Rocket Pool Smart Node Stack
      shell: "~/bin/rocketpool service install -d -y"
      debugger: always
    - name: Configure Rocket Pool
      blockinfile:
        path: ~/.rocketpool/settings.yml
        create: yes
        block: |
          chains:
            eth1:
              client:
              selected: geth
              params:
              - env: ETHSTATS_LABEL
                value: ""
              - env: ETHSTATS_LOGIN
                value: ""
              - env: GETH_CACHE_SIZE
                value: ""
              - env: GETH_MAX_PEERS
                value: ""
              - env: ETH1_P2P_PORT
                value: "30303"
              - env: INFURA_PROJECT_ID
                value: ""
              - env: POCKET_PROJECT_ID
                value: ""
              - env: HTTP_PROVIDER_URL
                value: ""
              - env: WS_PROVIDER_URL
                value: ""
            eth2:
              client:
                selected: lighthouse
                params:
                - env: CUSTOM_GRAFFITI
                  value: ""
                - env: ETH2_MAX_PEERS
                  value: ""
                - env: ETH2_P2P_PORT
                  value: "9001"
          metrics:
            enabled: true
            settings:
            - env: ETH2_METRICS_PORT
              value: "9100"
            - env: VALIDATOR_METRICS_PORT
              value: "9101"
            - env: NODE_METRICS_PORT
              value: "9102"
            - env: EXPORTER_METRICS_PORT
              value: "9103"
            - env: PROMETHEUS_PORT
              value: "9091"
            - env: GRAFANA_PORT
              value: "3100"

    - name: Configure beacon client with fallback web3 provider
      lineinfile:
        path: ~/.rocketpool/chains/eth2/start-beacon.sh
        regexp: '^(.*\/app\/cmd\/beacon-chain\/beacon-chain )(?:--fallback-web3provider=\S* )?(.*)'
        line: "\\1--fallback-web3provider={{ rocket_pool.eth1.fallback_web3provider }} \\2"
        backrefs: yes

    - name: Copy geth prune script
      copy:
        src: ./prune_geth.sh
        dest: ~/bin/
        mode: preserve

    #- name: "Schedule monthly geth pruning"
    #  cron:
    #    name: "geth pruning"
    #    minute: "0"
    #    hour: "0"
    #    day: "1"
    #    user: "rp"
    #    job: "~/bin/prune_geth.sh"

    #- name: Copy monitoring docker stack
    #  copy:
    #    src: ./monitoring/
    #    dest: ~/rocketpool_monitoring/

    #- name: Configue geth for Prometheus monitoring
    #  lineinfile:
    #    path: ~/.rocketpool/chains/eth1/start-node.sh
    #    regexp: '^(.*\/usr\/local\/bin\/geth )(?:--metrics --pprof --pprof.addr \d+\.\d+\.\d+\.\d+ )?(.*)'
    #    line: "\\1--metrics --pprof --pprof.addr 0.0.0.0 \\2"
    #    backrefs: yes

    #- name: Configure Prysm beacon for Prometheus monitoring
    #  lineinfile:
    #    path: ~/.rocketpool/chains/eth2/start-beacon.sh
    #    regexp: '^(.*\/app\/cmd\/beacon-chain\/beacon-chain )(?:--monitoring-host \d+\.\d+\.\d+\.\d+ )?(.*)'
    #    line: "\\1--monitoring-host 0.0.0.0 \\2"
    #    backrefs: yes

    #- name: Configure Prysm validator for Prometheus monitoring
    #  lineinfile:
    #    path: ~/.rocketpool/chains/eth2/start-validator.sh
    #    regexp: '^(.*/app/cmd/validator/validator )(?:--monitoring-host \d+\.\d+\.\d+\.\d+ )?(.*)'
    #    line: "\\1--monitoring-host 0.0.0.0 \\2"
    #    backrefs: yes

    #- name: Start Rocket Pool service
    #  shell: ~/bin/rocketpool service start

    #- name: Start the monitoring stack
    #  shell: docker-compose -f rocketpool_monitoring/docker-compose.yaml up -d --build --remove-orphans
    #  args: 
    #    chdir: ~

#    - name: TODO - wait for eth1 and eth2 to be in sync
#      shell: echo "TODO - wait for eth1 & eth2"
#    - name: TODO - Init wallet (rocketpool wallet init)
#      shell: echo "TODO - rocketpool wallet recover --password <the-password> --mnemonic <mnemonic>"